There are two main ways to join sets in python, either using the update() method, which simply puts the items from one set into another or by using the union() method which creates a new set with the items of each. Both of these methods will exlude any duplicates.

Example:

mySet = {"apple", "banana", "cherry"}
myOtherSet = {"potato", "carrot", "turnip"}

mySet.update(myOtherSet)

print(mySet) #Prints, {'turnip', 'potato', 'cherry', 'carrot', 'banana', 'apple'}



  mySet = {"apple", "banana", "cherry"}
myOtherSet = {"potato", "carrot", "turnip"}

myNewSet = mySet.union(myOtherSet)

print(myNewSet) #Prints, {'turnip', 'potato', 'cherry', 'carrot', 'banana', 'apple'}



mySet = {"apple", "banana", "cherry"}
myOtherSet = {"apple", "banana", "turnip"}

myNewSet = mySet.union(myOtherSet)

print(myNewSet) #Prints, {'turnip', 'cherry', 'banana', 'apple'}





Using the intersection_update() method only the items that are present in both sets (Keeps duplicate items) are kept, the intersection() method will return a new set with only items that were present in both of the original sets.

Example:


mySet = {"apple", "banana", "cherry"}
myOtherSet = {"apple", "banana", "turnip"}

mySet.intersection_update(myOtherSet)

print(mySet) #Prints, {'banana', 'apple'}



mySet = {"apple", "banana", "cherry"}
myOtherSet = {"apple", "banana", "turnip"}

myNewSet = mySet.intersection(myOtherSet)

print(myNewSet) #Prints, {'banana', 'apple'}





The symmetric_difference_update() method can be used to keep only the items that are not present in both, the symmetric_difference() method will return a new set that contains only the items that are not present in both.

Example:

mySet = {"apple", "banana", "cherry"}
myOtherSet = {"apple", "banana", "turnip"}

mySet.symmetric_difference_update(myOtherSet)

print(mySet) #Prints, {'cherry', 'turnip'}



mySet = {"apple", "banana", "cherry"}
myOtherSet = {"apple", "banana", "turnip"}

myNewSet = mySet.symmetric_difference(myOtherSet)
 
print(myNewSet) #Prints, {'cherry', 'turnip'}




