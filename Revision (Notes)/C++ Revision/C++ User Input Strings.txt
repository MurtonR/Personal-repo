It is possible to use the extraction operator >> on cin to display a string entered by a user:

string firstName;
cout << "Type your first name: ";
cin >> firstName; // get user input from the keyboard   
cout << "Your name is: " << firstName;

However, cin considers a space (whitespace, tabs, etc) as a terminating character, which means that it can only display a single word (even if you type many words): So if you input "Joe Mama" the output for a single variable would be "Joe"

That's why, when working with strings, we often use the getline() function to read a line of text. It takes cin as the first parameter, and the string variable as second:

string fullName;
cout << "Type your full name: ";
getline (cin, fullName);              -By using "getline()" "cin, fullName" the full string is output
cout << "Your name is: " << fullName;

// Type your full name: John Doe
// Your name is: John Doe



