switch(expression) {  -The "switch" expression is evaluated once
  case x:             -The value of the expression is compared with the values of each case
    // code block     -If there is a match then the associated block of code is executed
    break; 
  case y: 
    // code block
    break;            -The "break" and "default" are optional  default:
    // code block
}




int main() {   
  int day = 6;   -Declaring variable "day" which is "int"
  switch (day) {
  case 1:
    cout << "Monday";
    break;
  case 2:
    cout << "Tuesday";
    break;
  case 3:
    cout << "Wednesday";
    break;
  case 4:
    cout << "Thursday";
    break;
  case 5:
    cout << "Friday";
    break;
  case 6:
    cout << "Saturday";  -In this case would output "Saturday"

    break;
  case 7:
    cout << "Sunday";
    break;
  }
  return 0;
}




When C++ reaches a break keyword, it breaks out of the switch block. 
When a match is found, and the job is done, it's time for a break. There is no need for more testing.
This is very useful as it saves time, due to the rest of the code not being executed once a match is made.

"default" is used when there is no match, so there is atleast some output.

int day = 4;
switch (day) {
  case 6:
    cout << "Today is Saturday";
    break;
  case 7:
    cout << "Today is Sunday";
    break;
  default:
    cout << "Looking forward to the Weekend";
}