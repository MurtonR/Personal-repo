You can loop through the array elements using a for loop



#include <iostream>
#include <string>
using namespace std;

int main() {
  string cars[5] = {"Volvo", "BMW", "Ford", "Mazda", "Tesla"}; 
  for (int i = 0; i < 5; i++) {
    cout << cars[i] << "\n";      -Will output all the values associated with the index numbers from "0" to "4"
  }
  return 0;
}


-This outputs the index number as well as the value

string cars[5] = {"Volvo", "BMW", "Ford", "Mazda", "Tesla"};
for (int i = 0; i < 5; i++) {
  cout << i << " = " << cars[i] << "\n";   -Result is "i = cars[i]" for example "0 = Volvo"
}


This is exactly the same premise however it loops through integer values

#include <iostream>
using namespace std;

int main() {
  int myNumbers[5] = {10, 20, 30, 40, 50};
  for (int i = 0; i < 5; i++) {
    cout << myNumbers[i] << "\n";
  }
  return 0;
}


There is also a "for-each" loop that is used exclusively to loop through all the elements in an array

for (type variableName : arrayName) {  -This is how the "for-each" loop works





#include <iostream>
using namespace std;

int main() {
  int myNumbers[5] = {10, 20, 30, 40, 50};  -The value of the variable "i" is whatever array element is being output
  for (int i : myNumbers) {
    cout << i << "\n";         -Instead of doing "cout << myNumbers[i] << "\n"; you can simple output "i"   
  }
  return 0;
}









