When you know exactly how many times you want to loop through a block of code, use the for loop instead of a while loop:

Statement 1 sets a variable before the loop starts (int i = 0).

Statement 2 defines the condition for the loop to run (i must be less than 5). If the condition is true, the loop will start over again, if it is false, the loop will end.

Statement 3 increases a value (i++) each time the code block in the loop has been executed.

for (int i = 0; i < 5; i++) {  -"i" has a +1 to its value each time this loops until (i < 5) so it outputs from 1 to 4
  cout << i << "\n";
}


A loop can also be inside another loop (Nested Loop), the inner loop is fully executed for each iteration of the outer loop

// Outer loop
for (int i = 1; i <= 2; ++i) {
  cout << "Outer: " << i << "\n"; // Executes 2 times -Each time the outer loop is executed, it executes the entire inner

  // Inner loop
  for (int j = 1; j <= 3; ++j) {
    cout << " Inner: " << j << "\n"; // Executes 6 times (2 * 3) 
  }
}


There is a for-each loop that is used exclusively to loop through elements in an array

for (type variableName : arrayName) {
  // code block to be executed
}


Example
int myNumbers[5] = {10, 20, 30, 40, 50};
for (int i : myNumbers) {
  cout << i << "\n";
}