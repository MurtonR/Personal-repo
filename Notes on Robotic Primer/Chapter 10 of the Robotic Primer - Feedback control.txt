'Feedback contol' is a way of getting a system (robot) to achieve and mantain a desired state, usually called the 'set point' by constantly comparing its current state with its desired state.

'Feedback' refers to the information that is constantly being sent back (fed back) into the system's controller

The desired state, called the 'goal state' is the state that the system wants to be in. Goal states are fundemental to both control theory and AI, in reference to AI there are two types of goal states, these are 'Achievement and Maintenance Goals'.

Achievement Goals; These are states that the system want to reach and once the system has achieved this and is in the desired state it is done and no longer needs to do any work. A good example of this is a robot whose achievement goal is to reach the end of the maze, once the robot navigates the maze it stops, as there the robot is in the desired state and has no more goals to accomplish. AI has traditionally (but not always) concerned itself mainly with achievement goals.

Maintenance Goals; These are ongoing states that require constant action from the system itself in order to maintain the desired state. Examples of these include; A bipedal robot that must constantly make tiny adjustments in order to not lose balance and fall, a wall following robot and similarly a wall avoiding robot also both use maintenance goals. In all of these examples the robot actively has to sense and act upon this constantly to maintain the desired state. Control theory has traditionally (but not always) concerned itself mainly with maintenance goals.

The goal state can be internal or external, an example of an internal goal state is a robot that keeps track of its battery and then go to a marked charging station when it gets too low. Whereas an example of an external goal state is a robot that has to get to a specific location such as a kitchen. Some goal states combine both internal and external states for example a robotic arm that must balance a pole, the state of the pole is external whereas the state of the robotic arm is internal.

A goal state does not need to be achieveable as a most robots cannot recognise the impossible and will keep trying anyway.


Errors:

The difference between the current and desired states of a system is called the 'error' and the goal of any system is minimise the amount of error. Feedback is used to give the 'direction of error', feedback control effectively tells the system the direction of error and where they need to "go" in order to reduce the error and getting close to the goal.

When the system knows how far off it is from the goal it knows the 'magnitude of error' if before we knew the direction to "travel" to reduce the error then now we know how far away the desired state (goal) is.




Types of Feedback Control:

There are three main types of feedback control, these are; propertional control, propertional derivative control and propertional integral derivative control. These are commonly referred to as P, PD and PID control respectively.


Propotional Control:

The idea of proportional control is to have the system respond in proportion to the error, using the magnitude and direction of the error to assist.


o = Kpi

o is the ouput 

i is the input

Kp is the propotionality constant, this is unique to each control system

In control theory the parameters to determine the magnitude of the systems response are called 'gains'. Determining the right gains is usually very difficult, and as such trial and error and calibration are neccessary.If the value of a particular gain is proportional to the error it is called 'proportional gain'.

Damping refers to the process of systematically decreasing oscillations. A system is properly damped if it does not oscillate out of control. which means that either the oscillations are completely avoided or the oscillations gradually decreased to the desired state in a reasonable period of time.

Actuator uncertainty makes it impossible for a robot or humann to know the exact outcome of any action ahead of time. Although we are unable to predict the exact outcome of any action we can make reasonable estimates that are pretty good guesses.


Derivative Control:

Momentum = Mass + Velocity

Since momentum and velcoity are directly proportional we can control the momentum of an object by controlling the velocity. As the system nears the desired state we subtract an amount proportional to the velocity

-(gain * velocity)

This is called the derivative term because velocity is the derivative (the rate of change) of position

o = Kd di/dt

Kd is a proportionality constant.

The intuition behind derivative control is that the controller corrects for the system's momentum as it approaches the desired state. For example a wall following robot would decrease its speed and decrease the angle of its turning from a wall as it got closer to the wall, which is the desired state it wants to reach.



Integral control:

Another improvement to a control system is to include an 'integral term' (i). The idea is that the system keeps track of the repeatable fixed errors that are called 'steady state errors'. The system adds up (sums up/integrates) these incremental errors over time and once the cumulative error is reaches a pre-designated threshold the systems does something to compensate/correct.

o = Kf { i(t)dt

Kf is the proportionality constant.




Feedforward or Open Loop Control:

Feedback control is also called 'closed loop control' as it closes the loop between input and output and provides the system with error as feedback.

The alternative to this is called 'feedforward' or 'open loop control', in this system information is not fed back into the system and as such the system does not update depending on the amount of error instead it just executes any command given to it based on what was predicted.

Open loop control systems can be effective if well calibrated and the environment is reasonably predictable and does not change in a way that would effect the systems performance, these are very effective in repetitive state independent tasks.