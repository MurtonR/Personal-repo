Emergent Behaviour:

All robot behaviour results from the interaction of the robot's controller and the environment, if either of these components are simple the result will be quite predictable. However if the environment is dynamic or the controller hs various interacting components , or if both are true, then the output may be unpredictable.

If the unexpected behaviour has some meaning, pattern or structure to an observer it is often called an emergent.



Example: Emergent Wall-Following:

We should not assusme that it always takes a dynamic environment or complex controller to generate emergent behaviour, here is an example of such:

If left whisker bent, turn right.
If right whisker bent, turn left.
If both whiskers bent, back up and turn to the left.


This robot follows the wall but it doesn't know anything about walls, no walls are detected or recognised, yet the robot follows walls reliably and repeatably.



The Whole is Greater than the Sum of its Parts:

The idea of 'emergent behaviour' is that it involses some type of "holistic" capability, where the behaviour of the robot is greater than the sum of its "parts", which are the rules of the controller.  Emergent behaviour appears to produce more then what the robot was programmed to do.

If we wanted to have robots that flock together while maintaining distance between each individual robot, additionally without the robots communicating with eachother. In order to do this we use each robots local sensory data:

Don’t get too close to other robots (or other obstacles)
Don’t get too far from other robots
Keep moving if you can


"close" and "far" depends on various parameters such as velcoity, sensor range and how tight we want the flock to be.




Components of Emergence:

The notion of emergence depends on two components:

-The existence of an external observer, to see the emergent behaviour and describe it (if nobody sees the emergent behaviour, how do we know it happened?)

-Access to the innards of the controller, to verify that the behaviour is not specified anywhere in the system (if it is then it is not emergent)

Some robotocists argue that there is nothing emergent about the previous examples (wall-following) and these are instead examples of a style of indirect robot programmin that uses the environment and side-effects. These critics propose that in order for a behaviour to be emergent is must be truly unexpected; it must be discovered "surreptitiously" by observing the system, and must come as a true suprise to an external obserever.



Expect the Unexpected:

The issue with unexpected suprise is that it is only unexpected depending on the expectations of the observer, someone who is much more informed or understands the system very well may not be suprised by this behaviour whereas a less informed observer may be suprised. 

Another issue is that once an external observer has seen the "emergent" behaviour once it no longer is a unexpected suprise, and as such by this definition that behaviour is no longer emergent. This is not good as a behaviour should either be emergent or not, not emergent once and then never again.



Predictability of Suprise:

'Emergent behaviour' is structured behaviour (patterned, meaningful) than is apparent at one level of the system (external observer's viewpoint) but not at another (from the controller's/ robot's viewpoint).

There is potential for emergent behaviour in any complex system in the real world, this is due to the shear number of possible scenarios that a robot can encounter in the real world which are impossible to predict. 



Good vs. Bad Emergent Behaviour:

Not all emergent behaviour is good, for example oscillations can cause a robot to get stuck in a corner for a while, which isn't desired behaviour at all.



Architecture and Emergence:

Reactive and behaviour-based systems employ parallel rules and behaviours resoectively, these interact with each other and the environment. This provides the perfect foundation for exploiting emergent behaviour by design. In contrast deliberate systems are sequential and not parallel and as such there would require environment structure in order to have any behaviour emerge over time. Hybrid systems are similiar to deliberate systems in trying to produce a uniform output of the system, minimising interactions and as such minimising emergence.




