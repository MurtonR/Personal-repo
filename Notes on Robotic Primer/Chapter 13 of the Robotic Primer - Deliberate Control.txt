'Planning' is the process of looking forward at the outcomes of possible actions and searching for the sequence of actions that will have the desired outcome.

'Searching' is an inherent part of planning, and involves looking through the available representation in search of the one that will produce the desired outcome. Sometimes the complete representation needs to be searched (which can be very slow depending on the size of the representation) and other times only a partial search is necessary to find the first solution.

An example of planning and searching would be a wheeled robot that has a complete map of the maze, knows where it is, and know the location it wishes to end up. The robot would then plan a route through the maze in a representation of it (the map) and not in the physical maze itself. Because the map of the maze is just a representaion we can search for a sucessful route through however we want, forward, back, taking multiple routes at once, and then we can also have criteria for what the robot considers the 'best' route. It could be the fastest , the least crowded or the least noisy.

The process of improving a solution by finding a better one is called 'optimisation'. Various values or paths can be optimised, one such value is the distance of a path, these values are called 'optimisation criteria'. 'Optimising search' looks for multiple solutions and in some cases all possible solutions.


In order to use planning and searching the world needs to be represented in states, such as junctions, corridors, start, goal and the current state. If the robot wants to find the best, optimal path it must search all possible solutions and pick the one solution that is optimal based on the optimisation criteria.



Cost of Planning:

As the number of states become larger and the states themselves become longer it is difficult to plan and search due to amount of time required, the longer it takes to plan, the longer it takes for the robot to respond to the environment in real time. This can cause the robot to either be very slow or cause colisions or other unwanted effects due to the robot being unable to respond to the environment due to how long planning takes. One way to counter this to have heirarchies of states, where only a few "large", "coarse" or "absract" states are considered, this helps to reduce planning time.

Luckily computing power increases each year and this in turn allows us to do more planning in the same amount of time, however there is still a limit to what can be done in 'real time', this is the time in which a robot moves around a dynamic environment.




Deliberate planner based architectures have three processes that must be done in sequence. These deliberate architecture are also called SPA (Sense Plan-Act) architectures

-Sensing (S)

-Planning (P)

-Acting (A)


These Architectures have some serious drawbacks for robotics:
 

Time Scale- It can take a very long time to search in a large state space (the collection of all the states the robot can sense), this is due to most robots have many sensors from simple bump sensors to IR, sonar or laser sensors that are more complex. Just the sensors make a large state space combine these with representationas such as maps or images and it can take a long time to plan and search through such a large state space. If the planning speed is slow compared to the robots movement speed then the robot needs to stop and plan in order to ensure it is safe.


Space- It may take a large amount of space (memory storage) in order to represent and manipulate the robots state space representation. This is because the representation needs to contain all the information necessary for planning and optimisation such as distance, angles, locations, views, colours and more. Due to computer memory being relatively cheap space is not always a problem however there is always a finite amount of storage and some algorthims may run out.


Information- The planner assuemes all state information is up to date and correct, and as such the representation used must be updated and checked often in order to maintain correct information for the planner to use.


Use of Plans- In addition to all of the other drawbacks an accurate plan is only useful if:

-The environment does not change during the execution of the plan in a way that affects the plan

-The robot knows the state of the world and the plan at all times

-The robots effectors are accurate enough to exxecute each step of the plan to prepare for the next

Because of all these drawbacks deliberate control is not used as much, and instead reactive and hybrid control architechtures are used instead today. Deliberate control is used in robots that are designed to do surgery, as the robot follows the plan and there is not going to be any unexpected changes in the environment due to the well controlled environment (kept static). AI designed to play chess use deliberate control as there are never going to be any unexpected changes in the environment due to the fact that is an online game.


There are improvements that have been made to deliberate control:

-The use of save/cache for important and/ or urgent decisions instead of using slow planning/search

The use of closed loop instead of open loop in order to repond and replan due to changes in the environment.













